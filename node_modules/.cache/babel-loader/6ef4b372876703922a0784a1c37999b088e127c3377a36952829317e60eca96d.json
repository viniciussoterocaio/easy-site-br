{"ast":null,"code":"var _jsxFileName = \"/Users/viniciuscaio/Desktop/easy-site-br/src/anima\\xE7\\xF5es/TextoAnimado.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextoAnimado() {\n  _s();\n  const [texto, setTexto] = useState('');\n  const [index, setIndex] = useState(0);\n  const frase = 'EASY SITE BRASIL'; // Sua frase\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (index < frase.length) {\n        setTexto(prevTexto => prevTexto + frase[index]);\n        setIndex(prevIndex => prevIndex + 1);\n      } else {\n        setTimeout(() => {\n          setTexto('');\n          setIndex(0);\n        }, 2000); // Espera 2 segundos antes de reiniciar a animação\n      }\n    }, 100); // Velocidade da animação (100ms por letra)\n\n    return () => clearTimeout(timer);\n  }, [texto, index]); // Executa o efeito quando o texto ou o índice mudar\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    id: \"animation-text\",\n    children: texto\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(TextoAnimado, \"D68acp6AjVnLuIch7HCKl8g+RC8=\");\n_c = TextoAnimado;\nexport default TextoAnimado;\nvar _c;\n$RefreshReg$(_c, \"TextoAnimado\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TextoAnimado","_s","texto","setTexto","index","setIndex","frase","timer","setTimeout","length","prevTexto","prevIndex","clearTimeout","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/viniciuscaio/Desktop/easy-site-br/src/animações/TextoAnimado.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction TextoAnimado() {\n  const [texto, setTexto] = useState('');\n  const [index, setIndex] = useState(0);\n\n  const frase = 'EASY SITE BRASIL'; // Sua frase\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (index < frase.length) {\n        setTexto((prevTexto) => prevTexto + frase[index]);\n        setIndex((prevIndex) => prevIndex + 1);\n      } else {\n        setTimeout(() => {\n          setTexto('');\n          setIndex(0);\n        }, 2000); // Espera 2 segundos antes de reiniciar a animação\n      }\n    }, 100); // Velocidade da animação (100ms por letra)\n\n    return () => clearTimeout(timer);\n  }, [texto, index]); // Executa o efeito quando o texto ou o índice mudar\n\n  return (\n    <p id = \"animation-text\">{texto}</p>\n  );\n}\n\nexport default TextoAnimado;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMU,KAAK,GAAG,kBAAkB,CAAC,CAAC;;EAElCT,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7B,IAAIJ,KAAK,GAAGE,KAAK,CAACG,MAAM,EAAE;QACxBN,QAAQ,CAAEO,SAAS,IAAKA,SAAS,GAAGJ,KAAK,CAACF,KAAK,CAAC,CAAC;QACjDC,QAAQ,CAAEM,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;MACxC,CAAC,MAAM;QACLH,UAAU,CAAC,MAAM;UACfL,QAAQ,CAAC,EAAE,CAAC;UACZE,QAAQ,CAAC,CAAC,CAAC;QACb,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACZ;IACF,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAET,OAAO,MAAMO,YAAY,CAACL,KAAK,CAAC;EAClC,CAAC,EAAE,CAACL,KAAK,EAAEE,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEpB,oBACEL,OAAA;IAAGc,EAAE,EAAG,gBAAgB;IAAAC,QAAA,EAAEZ;EAAK;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAExC;AAACjB,EAAA,CAzBQD,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AA2BrB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}